% Project Euler #44

% Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first
% ten pentagonal numbers are:

% 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

% It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their 
% difference, 70 − 22 = 48, is not pentagonal.

% Find the pair of pentagonal numbers, Pj and Pk, for which their sum and 
% difference are pentagonal and D = |Pk − Pj| is minimised; what is the 
% value of D?

clear all
clc
VEC=[];

% Build a vector containing the pentagonal terms.
for n=[1:2500]
    P(n) = n*(3*n-1)/2;
end
z=0; % Switch to kick out of loop when solution found.
i=1; % Index of first value

while z==0
    n=1;    % Index of second value
    while n<=i 
        if any((P(i)+P(n))==P)==1 % Is sum also pentagonal?
            if (P(i)-P(n))>0
                if any((P(i)-P(n))==P)==1 % If so, is difference?
                    VEC=[VEC;P(i),P(n)];  % If so, save value and end loop
                    z=1;
                    n=i+1;
                end
            end
        end
        if n<=i && z==0
            n=n+1; % Increment second index
        end 
    end
    if z==0
        i=i+1; % Increment first index
    end
    if i==2500
        z=1;
    end
end

final= num2str(abs(VEC(1)-VEC(2)))

% I think this could be more efficient if I figured out a way to code it so
% that the vector builds itself as you go. Then it would be only the exact
% size that it needs to be. However, this solution still takes only a few
% seconds, but I had to guess the vector length to initially build.
    
