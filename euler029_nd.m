%  Project Euler #29
% Consider all integer combinations of ab for 2 <= a<= 5 and 2 <= b <= 5:
% 
% 2^2=4, 2^3=8, 2^4=16, 2^5=32
% 3^2=9, 3^3=27, 3^4=81, 3^5=243
% 4^2=16, 4^3=64, 4^4=256, 4^5=1024
% 5^2=25, 5^3=125, 5^4=625, 5^5=3125
% If they are then placed in numerical order, with any repeats removed, 
% we get the following sequence of 15 distinct terms:
% 
% 4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
% 
% How many distinct terms are in the sequence generated by a^b for 
% 2 <= a <= 100 and 2 <= b <= 100?

clear all
clc

% This is a counting exercise. We do not need to generate every distinct
% term. Prime numbers will not repeat. The only values that will repeat are
% those terms that can be represented as an exponent.

% Determine the Maximum number of distinct powers. This is just a gut
% check. I know the value needs to be less than this. I will remove this
% code once I solve.
maxa=100;
maxb=100;
max = (maxa-1) * (maxb-1);
count = 0;
remain = [];

% Determine the count of the numbers that will NOT have repeats.
% Save those values that will repeat, along with the additional powers.

for a=[2:maxa]
    d=0;
    for c=[2:6]
        if a^c <=maxa
            remain=[remain;a^c,a,c];
            d=1;
        end
    end
    if d==0
        count = count + maxb-1; % This is the maximum number of values.
    end
end

% Struggling with how to count the rest. I feel like there is an easier way
% to do this, than what I have started here... ponder ponder

% x=0
% rem2=[];
% for i=[1:length(remain(:,1))]
%     a=remain(i,1);
%     b=remain(i,2);
%     c=remain(i,3);
%     newcount=0;
%     if isprime(c)==1
%         for d=[2:maxb]
%             if d*c <= maxb
%                 newcount = newcount;
%             else
%                 newcount = newcount +1;
%             end
%         end
%         x=x+newcount;
%     else
%         rem2=[rem2;a,b,c]
%     end
% end
% 
% count = count + x;
